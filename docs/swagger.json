{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/v1/auth/signup": {
            "post": {
                "description": "Create a new user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Sign Up request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully created"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "description": "Logout a user with token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/merchants": {
            "get": {
                "description": "Retrieve a list of all merchants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "Get all merchants",
                "responses": {
                    "200": {
                        "description": "List of merchants"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Create a new merchant for an authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "Create a new merchant",
                "parameters": [
                    {
                        "description": "Merchant request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.MerchantRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/merchants/{id}": {
            "get": {
                "description": "Retrieve a merchant by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "Get a merchant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Merchant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant found"
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Merchant not found"
                    }
                }
            },
            "put": {
                "description": "Update an existing merchant by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Merchant"
                ],
                "summary": "Update a merchant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Merchant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Merchant update request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.MerchantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant updated successfully"
                    },
                    "400": {
                        "description": "Invalid ID or request body"
                    },
                    "404": {
                        "description": "Merchant not found"
                    }
                }
            },
            "delete": {
                "description": "Delete a merchant by its ID",
                "tags": [
                    "Merchant"
                ],
                "summary": "Delete a merchant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Merchant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant deleted successfully"
                    },
                    "400": {
                        "description": "Invalid ID"
                    },
                    "404": {
                        "description": "Merchant not found"
                    }
                }
            }
        },
        "/api/v1/transaction": {
            "post": {
                "description": "Create a new transaction for a merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.TransactionRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/transaction/{id}": {
            "get": {
                "description": "Retrieve a transaction by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucess"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "404": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction by its ID",
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Delete Transaction"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "404": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/v1/transactions": {
            "get": {
                "description": "Retrieve a list of all transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get all transactions",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controllers.MerchantRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.TransactionRequest": {
            "type": "object",
            "required": [
                "gross_amount",
                "merchant_id"
            ],
            "properties": {
                "gross_amount": {
                    "type": "number"
                },
                "merchant_id": {
                    "type": "integer"
                }
            }
        }
    }
}